{"signature": "classscvi.model.SCVI(adata=None,registry=None,n_hidden=128,n_latent=10,n_layers=1,dropout_rate=0.1,dispersion='gene',gene_likelihood='zinb',use_observed_lib_size=True,latent_distribution='normal',**kwargs)", "embedding": "single-cell Variational Inference[Lopezet al., 2018]."}
{"signature": "classscvi.model.SCANVI(adata=None,registry=None,n_hidden=128,n_latent=10,n_layers=1,dropout_rate=0.1,dispersion='gene',gene_likelihood='zinb',use_observed_lib_size=True,linear_classifier=False,datamodule=None,**model_kwargs)", "embedding": "Single-cell annotation using variational inference[Xuet al., 2021]."}
{"signature": "rapids_singlecell.pp.calculate_qc_metrics(adata,*,expr_type='counts',var_type='genes',qc_vars=None,log1p=True,layer=None)", "embedding": "Calculates basic qc Parameters. Calculates number of genes per cell (n_genes) and number of counts per cell (n_counts).\nLoosely based on calculate_qc_metrics from scanpy [Wolf et al. 2018]. Updatesobsandvarwith columns with qc data."}
{"signature": "rapids_singlecell.pp.filter_cells(data,*,min_counts=None,min_genes=None,max_counts=None,max_genes=None,inplace=True,verbose=True)", "embedding": "Grouping a set of objects by similarity Cluster analysis , or clustering , is a data analysis technique aimed at partitioning a set of objects into groups such that objects within the same group (called a cluster ) exhibit greater similarity to one another (in some specific sense defined by the analyst) than to those in other groups (clusters). It is a main task of exploratory data analysis , and a common technique for statistical data analysis , used in many fields, including pattern recognition , image analysis , information retrieval , bioinformatics , data compression , computer graphics and machine learning . Cluster analysis refers to a family of algorithms and tasks rather than one specific algorithm . It can be achieved by various algorithms that differ significantly in their understanding of what constitutes a cluster and how to efficiently find them. Popular notions of clusters include groups with small distances between cluster members, dense areas of the data space, intervals or particular statistical distributions ."}
{"signature": "rapids_singlecell.pp.filter_genes(data,*,min_counts=None,min_cells=None,max_counts=None,max_cells=None,inplace=True,verbose=True)", "embedding": "Medical condition Sickle cell disease ( SCD ), also simply called sickle cell , is a group of inherited haemoglobin-related blood disorders . The most common type is known as sickle cell anemia . Sickle cell anemia results in an abnormality in the oxygen-carrying protein haemoglobin found in red blood cells . This leads to the red blood cells adopting an abnormal sickle -like shape under certain circumstances; with this shape, they are unable to deform as they pass through capillaries , causing blockages. Problems in sickle cell disease typically begin around 5 to 6 months of age."}
{"signature": "rapids_singlecell.pp.normalize_total(adata,*,target_sum=None,layer=None,inplace=True,copy=False)", "embedding": "Normalizes rows in matrix so they sum totarget_sum."}
{"signature": "rapids_singlecell.pp.log1p(adata,*,layer=None,obsm=None,inplace=True,copy=False)", "embedding": "Calculated the natural logarithm of one plus the sparse matrix."}
{"signature": "rapids_singlecell.pp.highly_variable_genes(adata,*,layer=None,min_mean=0.0125,max_mean=3,min_disp=0.5,max_disp=inf,n_top_genes=None,flavor='seurat',n_bins=20,span=0.3,check_values=True,theta=100,clip=None,chunksize=1000,n_samples=10000,batch_key=None)", "embedding": "Annotate highly variable genes.\nExpects logarithmized data, except whenflavor='seurat_v3','seurat_v3_paper','pearson_residuals','poisson_gene_selection', in which count data is expected."}
{"signature": "rapids_singlecell.pp.regress_out(adata,keys,*,layer=None,inplace=True,batchsize=None,verbose=False)", "embedding": "Sequence of data points over time Not to be confused with Time (Film and TV) . In mathematics , a time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data. Examples of time series are heights of ocean tides , counts of sunspots , and the daily closing value of the Dow Jones Industrial Average ."}
{"signature": "rapids_singlecell.pp.scale(adata,*,zero_center=True,max_value=None,copy=False,layer=None,obsm=None,mask_obs=None,inplace=True)", "embedding": "Machine learning technique In machine learning , attention is a method that determines the importance of each component in a sequence relative to the other components in that sequence. In natural language processing , importance is represented by \"soft\" weights assigned to each word in a sentence. More generally, attention encodes vectors called token embeddings across a fixed-width sequence that can range from tens to millions of tokens in size. Unlike \"hard\" weights, which are computed during the backwards training pass, \"soft\" weights exist only in the forward pass and therefore change with every step of the input. Earlier designs implemented the attention mechanism in a serial recurrent neural network (RNN) language translation system, but a more recent design, namely the transformer , removed the slower sequential RNN and relied more heavily on the faster parallel attention scheme."}
{"signature": "rapids_singlecell.pp.pca(adata,n_comps=None,*,layer=None,zero_center=True,svd_solver=None,random_state=0,mask_var=_empty,use_highly_variable=None,dtype='float32',chunked=False,chunk_size=None,key_added=None,copy=False)", "embedding": "Performs PCA using the cuml decomposition function."}
{"signature": "rapids_singlecell.pp.normalize_pearson_residuals(adata,*,theta=100,clip=None,check_values=True,layer=None,inplace=True)", "embedding": "Applies analytic Pearson residual normalization, based on Lause21.\nThe residuals are based on a negative binomial offset model with overdispersionthetashared across genes. By default, residuals are clipped tosqrt(n_obs)and overdispersiontheta=100is used."}
{"signature": "rapids_singlecell.pp.flag_gene_family(adata,*,gene_family_name,gene_family_prefix=None,gene_list=None)", "embedding": "Flags a gene or gene_family in .var with boolean. (e.g all mitochondrial genes).\nPlease only choose gene_family prefix or gene_list"}
{"signature": "rapids_singlecell.pp.filter_highly_variable(adata)", "embedding": "Filters theAnnDataobject for highly_variable genes. Run highly_varible_genes first."}
{"signature": "rapids_singlecell.pp.harmony_integrate(adata,key,*,basis='X_pca',adjusted_basis='X_pca_harmony',dtype=<class'numpy.float64'>,correction_method='original',use_gemm=False,colsum_algo=None,**kwargs)", "embedding": "Aspect of music For other uses, see Harmony (disambiguation) . \"Disharmony\" redirects here. For the episode of Angel , see Disharmony ( Angel ) . In music , harmony is the concept of combining different sounds in order to create new, distinct musical ideas. Theories of harmony seek to describe or explain the effects created by distinct pitches or tones coinciding with one another; harmonic objects such as chords , textures and tonalities are identified, defined, and categorized in the development of these theories."}
{"signature": "rapids_singlecell.pp.scrublet(adata,adata_sim=None,*,batch_key=None,sim_doublet_ratio=2.0,expected_doublet_rate=0.05,stdev_doublet_rate=0.02,synthetic_doublet_umi_subsampling=1.0,knn_dist_metric='euclidean',normalize_variance=True,log_transform=False,mean_center=True,n_prin_comps=30,use_approx_neighbors=True,get_doublet_neighbor_parents=False,n_neighbors=None,threshold=None,verbose=True,copy=False,random_state=0)", "embedding": "Predict doublets using Scrublet."}
{"signature": "rapids_singlecell.pp.scrublet_simulate_doublets(adata,*,layer=None,sim_doublet_ratio=2.0,synthetic_doublet_umi_subsampling=1.0,random_seed=0)", "embedding": "Simulate doublets by adding the counts of random observed transcriptome pairs."}
{"signature": "rapids_singlecell.pp.neighbors(adata,n_neighbors=15,n_pcs=None,*,use_rep=None,random_state=0,algorithm='brute',metric='euclidean',metric_kwds=mappingproxy({}),algorithm_kwds=mappingproxy({}),key_added=None,copy=False)", "embedding": "Compute a neighborhood graph of observations with cuml."}
{"signature": "rapids_singlecell.pp.bbknn(adata,neighbors_within_batch=3,n_pcs=None,*,batch_key=None,use_rep=None,random_state=0,algorithm='brute',metric='euclidean',metric_kwds=mappingproxy({}),algorithm_kwds=mappingproxy({}),trim=None,key_added=None,copy=False)", "embedding": "Batch balanced KNN, altering the KNN procedure to identify each cell\u2019s top neighbours in\neach batch separately instead of the entire cell pool with no accounting for batch.\nThe nearest neighbours for each batch are then merged to create a final list of\nneighbours for the cell."}
{"signature": "rapids_singlecell.tl.umap(adata,*,min_dist=0.5,spread=1.0,n_components=2,maxiter=None,alpha=1.0,negative_sample_rate=5,init_pos='auto',random_state=0,a=None,b=None,key_added=None,neighbors_key=None,copy=False)", "embedding": "Embed the neighborhood graph using UMAP\u2019s cuml implementation."}
{"signature": "rapids_singlecell.tl.tsne(adata,n_pcs=None,*,use_rep=None,perplexity=30,early_exaggeration=12,learning_rate=200,method='barnes_hut',metric='euclidean',key_added=None,copy=False)", "embedding": "Performs t-distributed stochastic neighborhood embedding (tSNE) using cuml library."}
{"signature": "rapids_singlecell.tl.diffmap(adata,n_comps=15,*,neighbors_key=None,sort='decrease',density_normalize=True)", "embedding": "Method of utilizing water in magnetic resonance imaging Medical diagnostic method Diffusion-weighted magnetic resonance imaging ( DWI or DW-MRI ) is the use of specific MRI sequences as well as software that generates images from the resulting data that uses the diffusion of water molecules to generate contrast in MR images. It allows the mapping of the diffusion process of molecules, mainly water, in biological tissues , in vivo and non-invasively. Molecular diffusion in tissues is not random, but reflects interactions with many obstacles, such as macromolecules , fibers, and membranes . Water molecule diffusion patterns can therefore reveal microscopic details about tissue architecture, either normal or in a diseased state. A special kind of DWI, diffusion tensor imaging ( DTI ), has been used extensively to map white matter tractography in the brain."}
{"signature": "rapids_singlecell.tl.draw_graph(adata,*,init_pos=None,max_iter=500)", "embedding": "Force-directed graph drawing with cugraph\u2019s implementation of Force Atlas 2.\nThis is a reimplementation of scanpys function for GPU compute."}
{"signature": "rapids_singlecell.tl.mde(adata,*,device=None,n_neighbors=15,n_pcs=None,use_rep=None,**kwargs)", "embedding": "Util to runpymde.preserve_neighbors()for visualization of single cell embeddings."}
{"signature": "rapids_singlecell.tl.embedding_density(adata,basis='umap',*,groupby=None,key_added=None,batchsize=10000,components=None)", "embedding": "The density matrix embedding theory (DMET) is a numerical technique to solve strongly correlated electronic structure problems. By mapping the system to a fragment plus its entangled quantum bath, the local electron correlation effects on the fragment can be accurately modeled by a post-Hartree\u2013Fock solver. This method has shown high-quality results in 1D- and 2D- Hubbard models , and in chemical model systems incorporating the fully interacting electronic Hamiltonian, including long-range interactions. The basis of DMET is the Schmidt decomposition for quantum states, which shows that a given quantum many-body state, with macroscopically many degrees of freedom, K, can be represented exactly by an Impurity model consisting of 2N degrees of freedom for N<<K. Using an existing approximation (here called the effective lattice model) to the many-body state (for example in the mean-field approximation where correlations are neglected), DMET relates this effective lattice model to the impurity model by a one-body local potential, U."}
{"signature": "rapids_singlecell.tl.louvain(adata,resolution=1.0,*,restrict_to=None,key_added='louvain',adjacency=None,n_iterations=100,threshold=1e-07,use_weights=True,neighbors_key=None,obsp=None,dtype=<class'numpy.float32'>,copy=False)", "embedding": "Class of chemical substance Metal\u2013organic frameworks ( MOFs ) are a class of porous polymers consisting of metal clusters (also known as Secondary Building Units - SBUs) coordinated to organic ligands to form one-, two- or three-dimensional structures. The organic ligands included are sometimes referred to as \"struts\" or \"linkers\", one example being 1,4-benzenedicarboxylic acid (H 2 bdc). MOFs are classified as reticular materials . More formally, a metal\u2013organic framework is a potentially porous extended structure made from metal ions and organic linkers. An extended structure is a structure whose sub-units occur in a constant ratio and are arranged in a repeating pattern."}
{"signature": "rapids_singlecell.tl.leiden(adata,resolution=1.0,*,random_state=0,theta=1.0,restrict_to=None,key_added='leiden',adjacency=None,n_iterations=100,use_weights=True,neighbors_key=None,obsp=None,dtype=<class'numpy.float32'>,copy=False)", "embedding": "Performs Leiden clustering using cuGraph, which implements the method\ndescribed in:"}
{"signature": "rapids_singlecell.tl.kmeans(adata,n_clusters=8,n_pcs=50,*,use_rep='X_pca',n_init=1,random_state=42,key_added='kmeans',copy=False,**kwargs)", "embedding": "KMeans is a basic but powerful clustering method which is optimized via Expectation Maximization. It randomly selects K data points in X, and computes which samples are close to these points. For every cluster of points, a mean is computed (hence the name), and this becomes the new centroid."}
{"signature": "rapids_singlecell.tl.score_genes(adata,gene_list,*,ctrl_as_ref=True,ctrl_size=50,gene_pool=None,n_bins=25,score_name='score',random_state=0,copy=False,use_raw=None,layer=None)", "embedding": "Bioinformatics method Gene set enrichment analysis (GSEA) (also called functional enrichment analysis or pathway enrichment analysis ) is a method to identify classes of genes or proteins that are over-represented in a large set of genes or proteins, and may have an association with different phenotypes (e.g. different organism growth patterns or diseases). The method uses statistical approaches to identify significantly enriched or depleted groups of genes. Transcriptomics technologies and proteomics results often identify thousands of genes, which are used for the analysis. Researchers performing high-throughput experiments that yield sets of genes (for example, genes that are differentially expressed under different conditions) often want to retrieve a functional profile of that gene set, in order to better understand the underlying biological processes."}
{"signature": "rapids_singlecell.tl.score_genes_cell_cycle(adata,*,s_genes,g2m_genes,copy=False,**kwargs)", "embedding": "Medical condition ZTTK syndrome (Zhu-Tokita-Takenouchi-Kim syndrome) is a rare multisystem disease caused in humans by a genetic mutation of the SON gene . Common symptoms include developmental delay and often light to severe intellectual disability . Characteristic abnormalities include cerebral cortex malformations, vision difficulties, musculoskeletal abnormalities and congenital defects . Individuals with a mutation in the SON gene may not all display these features. However, SON loss of function (LoF) variants appear to cause a clinically distinguished phenotype."}
{"signature": "rapids_singlecell.tl.rank_genes_groups_logreg(adata,groupby,*,groups='all',use_raw=None,reference='rest',n_genes=None,layer=None,**kwds)", "embedding": "Bioinformatics method Gene set enrichment analysis (GSEA) (also called functional enrichment analysis or pathway enrichment analysis ) is a method to identify classes of genes or proteins that are over-represented in a large set of genes or proteins, and may have an association with different phenotypes (e.g. different organism growth patterns or diseases). The method uses statistical approaches to identify significantly enriched or depleted groups of genes. Transcriptomics technologies and proteomics results often identify thousands of genes, which are used for the analysis. Researchers performing high-throughput experiments that yield sets of genes (for example, genes that are differentially expressed under different conditions) often want to retrieve a functional profile of that gene set, in order to better understand the underlying biological processes."}
{"signature": "rapids_singlecell.get.aggregate(adata,by,func,*,axis=None,mask=None,dof=1,layer=None,obsm=None,varm=None,return_sparse=False,**kwargs)", "embedding": "Data visualization technique \"Colormap\" redirects here. For indexed palettes, see Indexed color . A heat map (or heatmap ) is a 2-dimensional data visualization technique that represents the magnitude of individual values within a dataset as a color. The variation in color may be by hue or intensity . In some applications such as crime analytics or website click-tracking, color is used to represent the density of data points rather than a value associated with each point."}
{"signature": "rapids_singlecell.get.anndata_to_GPU(adata,layer=None,convert_all=False,copy=False)", "embedding": "Parallel computing platform and programming model For other uses, see CUDA (disambiguation) . CUDA , which stands for Compute Unified Device Architecture , is a proprietary parallel computing platform and application programming interface (API) that allows software to use certain types of graphics processing units (GPUs) for accelerated general-purpose processing, significantly broadening their utility in scientific and high-performance computing . CUDA was created by Nvidia starting in 2004 and was officially released by in 2007. When it was first introduced, the name was an acronym for Compute Unified Device Architecture , but Nvidia later dropped the common use of the acronym and now rarely expands it. CUDA is both a software layer that manages data, giving direct access to the GPU and CPU as necessary, and a library of APIs that enable parallel computation for various needs."}
{"signature": "rapids_singlecell.get.anndata_to_CPU(adata,layer=None,convert_all=False,copy=False)", "embedding": "Parallel computing platform and programming model For other uses, see CUDA (disambiguation) . CUDA , which stands for Compute Unified Device Architecture , is a proprietary parallel computing platform and application programming interface (API) that allows software to use certain types of graphics processing units (GPUs) for accelerated general-purpose processing, significantly broadening their utility in scientific and high-performance computing . CUDA was created by Nvidia starting in 2004 and was officially released by in 2007. When it was first introduced, the name was an acronym for Compute Unified Device Architecture , but Nvidia later dropped the common use of the acronym and now rarely expands it. CUDA is both a software layer that manages data, giving direct access to the GPU and CPU as necessary, and a library of APIs that enable parallel computation for various needs."}
{"signature": "rapids_singlecell.get.X_to_GPU(X,warning='X')", "embedding": "Parallel computing platform and programming model For other uses, see CUDA (disambiguation) . CUDA , which stands for Compute Unified Device Architecture , is a proprietary parallel computing platform and application programming interface (API) that allows software to use certain types of graphics processing units (GPUs) for accelerated general-purpose processing, significantly broadening their utility in scientific and high-performance computing . CUDA was created by Nvidia starting in 2004 and was officially released by in 2007. When it was first introduced, the name was an acronym for Compute Unified Device Architecture , but Nvidia later dropped the common use of the acronym and now rarely expands it. CUDA is both a software layer that manages data, giving direct access to the GPU and CPU as necessary, and a library of APIs that enable parallel computation for various needs."}
{"signature": "rapids_singlecell.get.X_to_CPU(X)", "embedding": "Parallel computing platform and programming model For other uses, see CUDA (disambiguation) . CUDA , which stands for Compute Unified Device Architecture , is a proprietary parallel computing platform and application programming interface (API) that allows software to use certain types of graphics processing units (GPUs) for accelerated general-purpose processing, significantly broadening their utility in scientific and high-performance computing . CUDA was created by Nvidia starting in 2004 and was officially released by in 2007. When it was first introduced, the name was an acronym for Compute Unified Device Architecture , but Nvidia later dropped the common use of the acronym and now rarely expands it. CUDA is both a software layer that manages data, giving direct access to the GPU and CPU as necessary, and a library of APIs that enable parallel computation for various needs."}
{"signature": "celltypist.train(X=None,labels:str|list|tuple|ndarray|Series|Index|None=None,genes:str|list|tuple|ndarray|Series|Index|None=None,transpose_input:bool=False,with_mean:bool=True,check_expression:bool=True,C:float=1.0,solver:str|None=None,max_iter:int|None=None,n_jobs:int|None=None,use_SGD:bool=False,alpha:float=0.0001,use_GPU:bool=False,mini_batch:bool=False,batch_number:int=100,batch_size:int=1000,epochs:int=10,balance_cell_type:bool=False,feature_selection:bool=False,top_genes:int=300,date:str='',details:str='',url:str='',source:str='',version:str='',**kwargs)\u2192Model[source]\uf0c1", "embedding": "Train a celltypist model using mini-batch (optional) logistic classifier with a global solver or stochastic gradient descent (SGD) learning."}
{"signature": "celltypist.annotate(filename:AnnData|str='',model:str|Model|None=None,transpose_input:bool=False,gene_file:str|None=None,cell_file:str|None=None,mode:str='bestmatch',p_thres:float=0.5,majority_voting:bool=False,over_clustering:str|list|tuple|ndarray|Series|Index|None=None,use_GPU:bool=False,min_prop:float=0)\u2192AnnotationResult[source]\uf0c1", "embedding": "Suite of advanced driver-assistance system features Tesla Autopilot is an advanced driver-assistance system (ADAS) developed by Tesla, Inc. that provides partial vehicle automation, corresponding to Level 2 automation as defined by SAE International . All Tesla vehicles produced after April 2019 include Autopilot, which features autosteer and traffic-aware cruise control . Customers can purchase or subscribe to an optional package called \"Full Self-Driving (Supervised)\", also known as \"FSD\", which adds features such as semi-autonomous navigation, response to traffic lights and stop signs, lane change assistance , self-parking , and the ability to summon the car from a parking space. Since 2013, Tesla CEO Elon Musk has repeatedly predicted that the company would achieve fully autonomous driving (SAE Level 5 ) within one to three years, but these goals have not been met."}
{"signature": "celltypist.dotplot(predictions:AnnotationResult,use_as_reference:str|list|tuple|ndarray|Series|Index,use_as_prediction:str='majority_voting',prediction_order:str|list|tuple|ndarray|Series|Index|None=None,reference_order:str|list|tuple|ndarray|Series|Index|None=None,filter_prediction:float=0.0,cmap:str='RdBu_r',vmin:float|None=0.0,vmax:float|None=1.0,colorbar_title:str|None='Meanprobability',dot_min:float|None=0.0,dot_max:float|None=1.0,smallest_dot:float|None=0.0,size_title:str|None='Fractionofcells(%)',swap_axes:bool|None=False,title:str|None='CellTypistlabeltransfer',figsize:tuple|None=None,show:bool|None=None,save:str|bool|None=None,ax:_AxesSubplot|None=None,return_fig:bool|None=False,**kwds)\u2192DotPlot|dict|None[source]\uf0c1", "embedding": "Generate a dot plot showing CellTypist label transfer. This is a wrapper around thescanpy.pl.DotPlotwith selected parameters and customized defaults."}
{"signature": "celltypist.models.download_models(force_update:bool=False,model:str|list|tuple|None=None)\u2192None[source]\uf0c1", "embedding": "Large language model by Meta AI Not to be confused with LaMDA . Llama ( Large Language Model Meta AI ) is a family of large language models (LLMs) released by Meta AI starting in February 2023. The latest version is Llama 4, released in April 2025. Llama models come in different sizes, ranging from 1 billion to 2 trillion parameters. Initially only a foundation model , starting with Llama 2, Meta AI released instruction fine-tuned versions alongside foundation models."}
{"signature": "celltypist.samples.downsample_adata(adata:AnnData,mode:str='total',n_cells:int|None=None,by:str|None=None,balance_cell_type:bool=False,random_state:int=0,return_index:bool=True)\u2192AnnData|ndarray[source]\uf0c1", "embedding": "Type of artificial neural network A convolutional neural network ( CNN ) is a type of feedforward neural network that learns features via filter (or kernel ) optimization. This type of deep learning network has been applied to process and make predictions from many different types of data including text, images and audio. Convolution-based networks are the de-facto standard in deep learning -based approaches to computer vision and image processing, and have only recently been replaced\u2014in some cases\u2014by newer deep learning architectures such as the transformer . Vanishing gradients and exploding gradients, seen during backpropagation in earlier neural networks, are prevented by the regularization that comes from using shared weights over fewer connections. For example, for each neuron in the fully-connected layer, 10,000 weights would be required for processing an image sized 100 \u00d7 100 pixels."}
{"signature": "classcelltypist.classifier.AnnotationResult(labels:DataFrame,decision_mat:DataFrame,prob_mat:DataFrame,adata:AnnData)[source]\uf0c1", "embedding": "Buddhist term for the six senses In Buddhism , \u0101yatana ( P\u0101li ; Sanskrit : \u0906\u092f\u0924\u0928) is a \"center of experience\" or \"mental home,\" which create one's experience. The term (P\u0101li; Skt. ) refers to six cognitive functions, namely sight, hearing, smelling, tasting, body-cognition, and mind-cognition. \u0100yatana may refer to both ordinary experience and the chain of processes leading to bondage, as to awakened experience centered in detachment and meditative accomplishment. The Buddhist path aims to relocate one from the ordinary, sensual centers of experience to the \"mental home\" of the purified, liberated awareness of the jhanas."}
{"signature": "classcelltypist.classifier.Classifier(filename:AnnData|str='',model:Model|str='',transpose:bool=False,gene_file:str|None=None,cell_file:str|None=None)[source]\uf0c1", "embedding": "Bases:object"}
{"signature": "classcelltypist.models.Model(clf,scaler,description)[source]\uf0c1", "embedding": "Bases:object"}
